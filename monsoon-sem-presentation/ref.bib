@article{Mgr,
abstract = {This chapter will first briefly introduce Android's architecture, inter-process communication (IPC) mechanism, and main components. We then describe Android's security model and how it relates to the underlying Linux security infrastructure and code signing. We conclude with a brief overview of some newer additions to Android's security model, namely multi-user support, mandatory access control (MAC) based on SELinux, and verified boot. Android's architecture and security model are built on top of the tra-ditional Unix process, user, and file paradigm, but this paradigm is not described from scratch here. We assume a basic familiarity with Unix-like systems, particularly Linux. android's architecture Let's briefly examine Android's architecture from the bottom up. Figure 1-1 shows a simplified representation of the Android stack.},
author = {Mgr, Activity and Mgr, Package and Mgr, Window},
title = {{System Apps User-Installed Apps Android Framework Libraries System Services Java Runtime Libraries}},
url = {https://www.nostarch.com/download/Android{\_}Security{\_}Internals{\_}ch1.pdf}
}

@article{Sun,
abstract = {Android rooting enables device owners to freely customize their own devices and run useful apps that require root privi-leges. While useful, rooting weakens the security of Android devices and opens the door for malware to obtain privileged access easily. Thus, several rooting prevention mechanisms have been introduced by vendors, and sensitive or high-value mobile apps perform rooting detection to mitigate potential security exposures on rooted devices. However, there is a lack of understanding whether existing rooting prevention and detection methods are effective. To fill this knowledge gap, we studied existing Android rooting methods and per-formed manual and dynamic analysis on 182 selected apps, in order to identify current rooting detection methods and evaluate their effectiveness. Our results suggest that these methods are ineffective. We conclude that reliable meth-ods for detecting rooting must come from integrity-protected kernels or trusted execution environments, which are diffi-cult to bypass.},
author = {Sun, San-Tsai and Cuadros, Andrea and Beznosov, Konstantin},
doi = {10.1145/2808117.2808126},
file = {:C$\backslash$:/Users/Yash/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Sun, Cuadros, Beznosov - Unknown - Android Rooting Methods, Detection, and Evasion.pdf:pdf},
keywords = {Access controls,Privileged Malware},
mendeley-groups = {Project},
title = {{Android Rooting: Methods, Detection, and Evasion}},
url = {https://pdfs.semanticscholar.org/4018/33f6bed8735f77782d5c3a38de84968eb640.pdf}
}
